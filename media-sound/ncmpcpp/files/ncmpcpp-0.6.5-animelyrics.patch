diff -urN ncmpcpp-0.6.5/src/lyrics_fetcher.cpp ncmpcpp-0.6.5-new/src/lyrics_fetcher.cpp
--- ncmpcpp-0.6.5/src/lyrics_fetcher.cpp	2015-07-05 04:18:34.000000000 +0200
+++ ncmpcpp-0.6.5-new/src/lyrics_fetcher.cpp	2015-09-14 17:28:13.840566945 +0200
@@ -39,6 +39,7 @@
 	new LyricwikiFetcher(),
 	new AzLyricsFetcher(),
 	new Sing365Fetcher(),
+	new AnimelyricsFetcher(),
 	new LyricsmaniaFetcher(),
 	new MetrolyricsFetcher(),
 	new JustSomeLyricsFetcher(),
@@ -168,6 +169,7 @@
 	return data.find("action=edit") != std::string::npos;
 }
 
+
 /**********************************************************************/
 
 LyricsFetcher::Result GoogleLyricsFetcher::fetch(const std::string &artist, const std::string &title)
@@ -243,6 +245,26 @@
 
 /**********************************************************************/
 
+void AnimelyricsFetcher::postProcess(std::string &data) const
+{
+        boost::replace_all(data, "", "-");
+        data = unescapeHtmlUtf8(data);
+        LyricsFetcher::postProcess(data);
+}
+
+
+bool AnimelyricsFetcher::isURLOk(const std::string &url)
+{
+        // Hack url from *.htm to *.txt text-only resource (print).
+        std::string *ptr;
+        ptr = (std::string*)(&url);
+        boost::replace_all(*ptr, ".htm",".txt");
+	return url.find(siteKeyword()) != std::string::npos;
+}
+
+
+/**********************************************************************/
+
 LyricsFetcher::Result InternetLyricsFetcher::fetch(const std::string &artist, const std::string &title)
 {
 	GoogleLyricsFetcher::fetch(artist, title);
diff -urN ncmpcpp-0.6.5/src/lyrics_fetcher.h ncmpcpp-0.6.5-new/src/lyrics_fetcher.h
--- ncmpcpp-0.6.5/src/lyrics_fetcher.h	2015-07-05 04:18:34.000000000 +0200
+++ ncmpcpp-0.6.5-new/src/lyrics_fetcher.h	2015-09-14 16:23:11.850488386 +0200
@@ -74,6 +74,19 @@
 	const char *URL;
 };
 
+struct AnimelyricsFetcher : public GoogleLyricsFetcher
+{
+        virtual const char *name() const OVERRIDE { return "animelyrics.com"; }
+
+        protected:
+                virtual const char *siteKeyword() const OVERRIDE { return "animelyrics"; }
+		virtual const char *regex() const OVERRIDE { return "-----------------------------------------------------------------------------------------------------------(.*?)-----------------------------------------------------------------------------------------------------------";}
+
+                virtual bool isURLOk(const std::string &url) OVERRIDE ;
+		virtual void postProcess(std::string &data) const OVERRIDE;
+
+};
+
 struct MetrolyricsFetcher : public GoogleLyricsFetcher
 {
 	virtual const char *name() const OVERRIDE { return "metrolyrics.com"; }
Los ficheros binarios ncmpcpp-0.6.5/src/lyrics_fetcher.o y ncmpcpp-0.6.5-new/src/lyrics_fetcher.o son distintos
